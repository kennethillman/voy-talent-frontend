/////////////////////////////////////////////////////////////////////////////////////////////////////////

//
// MIXINS
//

/////////////////////////////////////////////////////////////////////////
// Table of contents
/////////////////////////////////////////////////////////////////////////
//
//
// - - ASPECT-RATIO-IMG
// - - BORDER RADIUS
// - - GRADIENT
// - - TRANSITION
// - - BOX SHADOW
// - - ROTATE
// - - BOX SIZING
// - - CLEARFIX
// - - PLACEHOLDER TEXT
//
//
/////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
// TRANISTION
// -> @include transitionTwo(height 0.3 ease 0.3s, width 0.3 ease 0.3s);
/////////////////////////////////////////////////////////////////////////

@mixin transition($a) {
    -webkit-transition: $a;
    -ms-transition: $a;
    transition: $a;
}

@mixin transitionTwo($a, $b) {
    -webkit-transition: $a, $b;
    -ms-transition: $a, $b;
    transition: $a, $b;
}

@mixin transitionThree($a, $b, $c) {
    -webkit-transition: $a, $b, $c;
    -ms-transition: $a, $b, $c;
    transition: $a, $b, $c;
}

/////////////////////////////////////////////////////////////////////////
// TRANISTION
// -> @include skew(25,10);
// -> @include transform-origin(top left);
// -> @include transform(rotate(90deg));
// -> @include transform(translate(10%, -2px));
/////////////////////////////////////////////////////////////////////////


// Generic transform

@mixin transform($t) {
    -moz-transform: $t;
    -o-transform: $t;
    -ms-transform: $t;
    -webkit-transform: $t;
    transform: $t;
}

@mixin transformTwo($t1, $t2) {
    -moz-transform: $t1 $t2;
    -o-transform: $t1 $t2;
    -ms-transform: $t1 $t2;
    -webkit-transform: $t1 $t2;
    transform: $t1 $t2;
}

@mixin transformThree($t1, $t2, $t3) {
    -moz-transform: $t1 $t2 $t3;
    -o-transform: $t1 $t2 $t3;
    -ms-transform: $t1 $t2 $t3;
    -webkit-transform: $t1 $t2 $t3;
    transform: $t1 $t2 $t3;
}

// Rotate

@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}


// Scale

@mixin scale($scale) {
    @include transform(scale($scale));
}


// Translate

@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}


// Skew

@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}


// Transform origin

@mixin transform-origin ($origin) {
    -moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}


/////////////////////////////////////////////////////////////////////////
// ASPECT-RATIO-IMG
// -> @include aspect-ratio-img(16,9)
/////////////////////////////////////////////////////////////////////////

@mixin aspect-ratio-content($width, $height) {
    position: relative;
    overflow: hidden;
    display: block;

    &:before {
        display: block;
        content: " ";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    .body {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        height: 100%;
        width: 100%;
    }

}

@mixin aspect-ratio-teaser-content($width, $height) {
    position: relative;
    overflow: hidden;
    display: block;

    &:before {
        display: block;
        content: " ";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

}



@mixin aspect-ratio-img($width, $height) {
    position: relative;
    overflow: hidden;
    display: block;

    &:before {
        display: block;
        content: " ";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    img {
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        // height: auto;
    }

}

@mixin aspect-ratio-iframe($width, $height) {
    position: relative;
    overflow: hidden;
    display: block;

    &:before {
        display: block;
        content: " ";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    iframe {
        position:absolute;
        top:0;
        left:0;
        width:100%;
        height:100%;
    }

}

@mixin aspect-ratio-tinymce-add($width, $height) {
    position: relative;
    overflow: hidden;
    display: block;

    &:before {
        display: block;
        content: " ";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

}

/////////////////////////////////////////////////////////////////////////
// BORDER RADIUS
// -> @include border-radius(4px);
// -> @include border-radius-left(4px);
// -> @include border-radius-right(4px);
// -> @include border-radius-bottom(4px);
// -> @include border-radius-top(4px);

/////////////////////////////////////////////////////////////////////////

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin border-radius-right($radius) {
    -webkit-border-top-right-radius: $radius;
    -webkit-border-bottom-right-radius: $radius;
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
}

@mixin border-radius-left($radius) {
    -webkit-border-top-left-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-radius-bottom($radius) {
    -webkit-border-bottom-right-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-radius-top($radius) {
    -webkit-border-top-right-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
}



/////////////////////////////////////////////////////////////////////////
// GRADIENT
// -> @include background-gradient(#fff,#eee);
/////////////////////////////////////////////////////////////////////////

@mixin background-gradient($color1, $color2) {
    background: $color1;
    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($color1), to($color2));
    background: -webkit-linear-gradient(top, $color1, $color2);
    background: -ms-linear-gradient(top, $color1, $color2);
    background: linear-gradient($color1, $color2);
}

/////////////////////////////////////////////////////////////////////////
// TRANSITION
// -> @include transition(width, 0.4s, ease-out, 0s)
/////////////////////////////////////////////////////////////////////////

/*
@mixin transition($property, $duration:0.3s, $function: ease, $delay: 0s){
-webkit-transition: $property $duration $function $delay;
-ms-transition: $property $duration $function $delay;
transition: $property $duration $function $delay;
} */

/////////////////////////////////////////////////////////////////////////
// BOX SHADOW
// -> @include box-shadow($top, $left, $blur, $color, $inset: false);
/////////////////////////////////////////////////////////////////////////

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color;
        -moz-box-shadow: inset $top $left $blur $color;
        box-shadow: inset $top $left $blur $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}



/////////////////////////////////////////////////////////////////////////
// ROTATE
// -> @include rotate(90);
/////////////////////////////////////////////////////////////////////////

@mixin rotate($deg) {
    -webkit-transform: rotate(#{$deg}deg);
    -ms-transform: rotate(#{$deg}deg);
    transform: rotate(#{$deg}deg);
}


/////////////////////////////////////////////////////////////////////////
// FILTER
// -> @include filter(grayscale, 100%);
/////////////////////////////////////////////////////////////////////////

@mixin filter($gray, $sepia) {
    -webkit-filter: grayscale($gray) sepia($sepia);
    filter: grayscale($gray) sepia($sepia);
}

@mixin filter($filter-type, $filter-amount) {
    -webkit-filter: $filter-type+unquote("(#{$filter-amount})");
    -moz-filter: $filter-type+unquote("(#{$filter-amount})");
    -ms-filter: $filter-type+unquote("(#{$filter-amount})");
    -o-filter: $filter-type+unquote("(#{$filter-amount})");
    filter: $filter-type+unquote("(#{$filter-amount})");
}


/////////////////////////////////////////////////////////////////////////
// BOX SIZING
// -> @include box-sizing;
/////////////////////////////////////////////////////////////////////////

@mixin box-sizing ($value: border-box) {
    -webkit-box-sizing: $value;
    -moz-box-sizing: $value;
    box-sizing: $value;
}


/////////////////////////////////////////////////////////////////////////
// CLEARFIX
// -> @include clearfix;
/////////////////////////////////////////////////////////////////////////

@mixin clearfix {
    zoom: 1;
    &:before,
    &:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden;
}
    &:after {
        clear: both;
    }
}


/////////////////////////////////////////////////////////////////////////
// PLACEHOLDER TEXT
// -> @include placeholder-text-color(#000);
// -> @include placeholder-text-transform(font-size);
// -> @include placeholder-text-fadeOut();
/////////////////////////////////////////////////////////////////////////


/* - Placeholder text color - - */

@mixin placeholder-text-color ($color) {
    &:-moz-placeholder {
        color: $color;
    }
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
    &::-webkit-input-placeholder {
        color: $color;
    }
}


/* - Placeholder text transform - - */

@mixin placeholder-text-transform ($transform) {
    &:-moz-placeholder {
        text-transform: $transform;
    }
    &::-moz-placeholder {
        text-transform: $transform;
    }
    &:-ms-input-placeholder {
        text-transform: $transform;
    }
    &::-webkit-input-placeholder {
        text-transform: $transform;
    }
}


/* - Placeholder text fade  out - - */

@mixin placeholder-text-fadeOut {
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
    &::-webkit-input-placeholder {
        @content;
    }
}


/////////////////////////////////////////////////////////////////////////
// Flexbox display
// -> @include flexbox();
/////////////////////////////////////////////////////////////////////////

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
/////////////////////////////////////////////////////////////////////////
// The 'flex' shorthand
// applies to: flex items
// <positive-number>, initial, auto, or none
// -> @include flex(auto);
/////////////////////////////////////////////////////////////////////////

@mixin flex($values) {
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

/////////////////////////////////////////////////////////////////////////
// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
// -> @include flex-direction(column);
/////////////////////////////////////////////////////////////////////////

@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

/////////////////////////////////////////////////////////////////////////
// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
/////////////////////////////////////////////////////////////////////////

@mixin flex-wrap($wrap) {
    -webkit-flex-wrap: $wrap;
    -moz-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

/////////////////////////////////////////////////////////////////////////
// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
// -> @include flex-flow(right);
/////////////////////////////////////////////////////////////////////////

@mixin flex-flow($flow) {
    -webkit-flex-flow: $flow;
    -moz-flex-flow: $flow;
    -ms-flex-flow: $flow;
    flex-flow: $flow;
}


/////////////////////////////////////////////////////////////////////////
// Display Order
// - applies to: flex items
// <integer>
// -> @include flex-order(1);
/////////////////////////////////////////////////////////////////////////

@mixin flex-order($val) {
    -webkit-box-ordinal-group: $val;
    -moz-box-ordinal-group: $val;
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}


/////////////////////////////////////////////////////////////////////////
// Flex grow factor
// - applies to: flex items
// <number>
// -> @include flex-grow(2);
/////////////////////////////////////////////////////////////////////////

@mixin flex-grow($grow) {
    -webkit-flex-grow: $grow;
    -moz-flex-grow: $grow;
    -ms-flex-grow: $grow;
    flex-grow: $grow;
}


/////////////////////////////////////////////////////////////////////////
// Flex shrink
// - applies to: flex item shrink factor
// <number>
// -> @include flex-shrink(2);
/////////////////////////////////////////////////////////////////////////

@mixin flex-shrink($shrink) {
    -webkit-flex-shrink: $shrink;
    -moz-flex-shrink: $shrink;
    -ms-flex-shrink: $shrink;
    flex-shrink: $shrink;
}


/////////////////////////////////////////////////////////////////////////
// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
// @include flex-basis(300px);
/////////////////////////////////////////////////////////////////////////

@mixin flex-basis($width) {
    -webkit-flex-basis: $width;
    -moz-flex-basis: $width;
    -ms-flex-basis: $width;
    flex-basis: $width;
}


/////////////////////////////////////////////////////////////////////////
// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
// -> @include flex-justify-content(center);
/////////////////////////////////////////////////////////////////////////

@mixin flex-justify-content($justify) {
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    -ms-justify-content: $justify;
    justify-content: $justify;
    -ms-flex-pack: $justify;
}


/////////////////////////////////////////////////////////////////////////
// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
// -> @include flex-align-content(center);
/////////////////////////////////////////////////////////////////////////

@mixin flex-align-content($align) {
    -webkit-align-content: $align;
    -moz-align-content: $align;
    -ms-align-content: $align;
    align-content: $align;
}


/////////////////////////////////////////////////////////////////////////
// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
// -> @include flex-align-items(center);
/////////////////////////////////////////////////////////////////////////

@mixin flex-align-items($align) {
    -webkit-align-items: $align;
    -moz-align-items: $align;
    -ms-align-items: $align;
    align-items: $align;
}


/////////////////////////////////////////////////////////////////////////
// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
// -> @include flex-align-self(center);
/////////////////////////////////////////////////////////////////////////

@mixin flex-align-self($align) {
    -webkit-align-self: $align;
    -moz-align-self: $align;
    -ms-align-self: $align;
    align-self: $align;
}
